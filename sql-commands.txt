-- List stored procedures with statistics e.g. execution_count and avg_elapsed_time
SELECT DB_NAME(database_id) DatabaseName,
OBJECT_NAME(object_id) ProcedureName,
cached_time, last_execution_time, execution_count,
total_elapsed_time/execution_count AS avg_elapsed_time,
type_desc
FROM sys.dm_exec_procedure_stats
ORDER BY execution_count;


-- List executed queries
SELECT qs.execution_count,
       creation_time, 
             last_execution_time,  
    SUBSTRING(qt.text,qs.statement_start_offset/2 +1,   
                 (CASE WHEN qs.statement_end_offset = -1   
                       THEN LEN(CONVERT(nvarchar(max), qt.text)) * 2   
                       ELSE qs.statement_end_offset end -  
                            qs.statement_start_offset  
                 )/2  
             ) AS query_text,   
     qt.dbid, dbname= DB_NAME (qt.dbid), qt.objectid,   
     qs.total_rows, qs.last_rows, qs.min_rows, qs.max_rows  
FROM sys.dm_exec_query_stats AS qs   
CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS qt   
--WHERE qt.text like '%SELECT%'   
ORDER BY qs.execution_count DESC; 


-- User name duplicated across all the clients (the whole system).
SELECT [UserName],  COUNT(*)
FROM [dbo].[AbpUserAccounts] WHERE IsDeleted = 0
GROUP BY [UserName]
HAVING COUNT(*) > 1


-- Email address duplicated across all the clients (the whole system). Excluding XXX@masitek
SELECT [EmailAddress],  COUNT(*)
FROM [dbo].[AbpUserAccounts] WHERE (IsDeleted = 0) AND (EmailAddress NOT LIKE '%@masitek.com%')
GROUP BY [EmailAddress]
HAVING COUNT(*) > 1


-- Lists all clients using tablet version between 2001-2017 who uploaded datruns in 2022.
-- Counts how many runs each client made
-- Joins tables tblDataRuns and tblClients to display client name.
SELECT t1.ClientId, t2.Name, COUNT(*) AS "Times used"
FROM (SELECT [Id]
      ,[Key]
      ,[ClientId]
      ,[UserId]
      ,[DeviceId]
      ,[Name]
      ,[Notes]
      ,[FirmwareVersion]
      ,[TabletVersion]
      ,[DateDeleted]
      ,[LocationId]
      ,[LineId]
      ,[StartTime]
      ,[EndTime]
      ,[DateUploaded]
      ,[DeleterUserId]
  FROM [dbo].[tblDataRuns] where TabletVersion > '2000' and TabletVersion < '2018' and [DateUploaded] > '2022-01-01' ) as t1 
JOIN [dbo].tblClients t2 ON t1.ClientId = t2.Id  
GROUP BY t2.Name, t1.ClientId ORDER BY "Times used" DESC


-- Join AbpUser and AbpUserUserAccounts wher ID is equal but isDeleted is different.
-- Then join the result (UserJoinedAccounts) with Tenats where UserJoinedAccounts.TenatId is Tenats.Id.
SELECT UserJoinedAccounts.*, Tenants.*
FROM (
  SELECT AU.IsDeleted AS AbpUsers_IsDeleted, 
         AUA.IsDeleted AS AbpUserAccounts_IsDeleted, 
         AUA.*
  FROM [dbo].[AbpUserAccounts] AUA
  INNER JOIN [dbo].[AbpUsers] AU ON (AU.Id = AUA.UserId)
  WHERE AU.IsDeleted != AUA.IsDeleted
) UserJoinedAccounts
JOIN [dbo].[AbpTenants] Tenants ON UserJoinedAccounts.TenantId = Tenants.Id ORDER BY TenancyName


-- Rename database
USE master;  
GO  
ALTER DATABASE [masitek-dev-2023-2-7-10-30] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
GO
ALTER DATABASE [masitek-dev-2023-2-7-10-30] MODIFY NAME = [Masitek_Portal];
GO  
ALTER DATABASE [Masitek_Portal] SET MULTI_USER;
GO

-- Print rows affected by update query
UPDATE [dbo].[AbpUserAccounts]
SET EmailAddress = REPLACE(EmailAddress, '''', '')
OUTPUT deleted.*
WHERE EmailAddress LIKE '''%';

-- Add user to DB
CREATE LOGIN LoginName WITH PASSWORD = '123';
CREATE USER UserName FOR LOGIN LoginName; CProdWkci2 WITH PASSWORD = 'Iopwn6m_2Zr30*OAz';
ALTER ROLE db_datareader
	ADD MEMBER UserName;  
GO
